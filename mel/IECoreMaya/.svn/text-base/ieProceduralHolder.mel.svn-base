//////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2007, Image Engine Design Inc. All rights reserved.
//
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions are
//  met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//
//     * Redistributions in binary form must reproduce the above copyright
//       notice, this list of conditions and the following disclaimer in the
//       documentation and/or other materials provided with the distribution.
//
//     * Neither the name of Image Engine Design nor the names of any
//       other contributors to this software may be used to endorse or
//       promote products derived from this software without specific prior
//       written permission.
//
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
//  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
//  THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
//  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
//  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
//  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
//  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
//  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
//  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
//  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
//////////////////////////////////////////////////////////////////////////

/// \file ieProceduralHolder.mel
///
/// This file defines functions used to create and manipulate ieProceduralHolder
/// nodes.
///
/// \see ieParameterisedHolder.mel
///
/// \ingroup melgroup

/// Creates a new procedural holding node called $name and sets it to hold the class
/// specified. Returns the new node name (this may be different to $name). If $classVersion
/// is less than 0 then the default version for the class is used.
global proc string ieProceduralHolderCreate( string $name, string $className, int $classVersion )
{
	string $validName = substituteAllString($name, "/", "_");
	string $node = ieNodeCreateShapeWithParent( $validName, "ieProceduralHolder" );
	sets -add initialShadingGroup $node;
	ieParameterisedHolderSetParameterised( $node, $className, $classVersion, "IECORE_PROCEDURAL_PATHS" );
	return $node;
}

/// Returns a list of classes (matching the provided the glob style string) available for use in the procedural holder.
global proc string[] ieProceduralHolderClassNames( string $match )
{
	string $s = `iePython -eval ( "' '.join( IECore.ClassLoader.defaultProceduralLoader().classNames() )" )`;
	string $st[]; tokenize $s $st;
	return $st;
}
