//////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 2007, Image Engine Design Inc. All rights reserved.
//
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions are
//  met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//
//     * Redistributions in binary form must reproduce the above copyright
//       notice, this list of conditions and the following disclaimer in the
//       documentation and/or other materials provided with the distribution.
//
//     * Neither the name of Image Engine Design nor the names of any
//       other contributors to this software may be used to endorse or
//       promote products derived from this software without specific prior
//       written permission.
//
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
//  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
//  THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
//  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
//  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
//  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
//  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
//  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
//  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
//  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
//////////////////////////////////////////////////////////////////////////

global proc AEieConverterHolderTemplate( string $nodeName )
{
	editorTemplate -beginScrollLayout;

		editorTemplate -addControl "in";
			
		editorTemplate -callCustom "ieConverterHolderUIConversionNew" 
			"ieConverterHolderUIConversionReplace" 
			"fileName";
						
		editorTemplate -beginLayout "Parameters";
			ieParameterisedHolderUIParametersControl();		
		editorTemplate -endLayout;

		editorTemplate -beginLayout "Extra Attributes";
				ieParameterisedHolderUIExtraAttributesControl();
		editorTemplate -endLayout;
			
	editorTemplate -endScrollLayout;	
}

global proc ieConverterHolderUIConversionNew( string $attrName )
{
	setUITemplate -pushTemplate attributeEditorTemplate;
			
		rowLayout -nc 3 "fileName";
		
			text -label "File Name";
			textField nameField;
			symbolButton -image "navButtonBrowse.xpm" browserButton;
		
		setParent ..;

		rowLayout -nc 2;
		
			text -label "";
			button -label "Export" exportButton; 		
		
		setParent ..;
		
		ieConverterHolderUIConversionReplace( $attrName );
	
	setUITemplate -popTemplate;
}

global proc ieConverterHolderUIConversionReplace( string $attrName )
{
	string $node = ieAttrNode( $attrName );

	connectControl -fileName nameField $attrName;
	button -e -c ("ieConverterHolderUIFileBrowser \"" + $attrName + "\"") browserButton;
	button -e -c ("ieConverterHolderExportCallback \"" + $node + "\"") exportButton;
}

global proc ieConverterHolderUIFileBrowser( string $attrName )
{
	fileBrowser( "ieConverterHolderUIFileBrowserCallback \"" + $attrName + "\"", "Choose", "", 1 );
}

global proc int ieConverterHolderUIFileBrowserCallback( string $attrName, string $fileName, string $fileType )
{
	setAttr -type "string" $attrName $fileName;
	return 1;
}

global proc ieConverterHolderExportCallback( string $node )
{
	string $fileName = `getAttr ($node+".fileName")`;
	if( `gmatch $fileName "*#*"` )
	{
		int $start = `playbackOptions -q -min`;
		int $end = `playbackOptions -q -max`;
		iePython -cmd ("IECoreMaya.ConverterHolder( '" + $node + "' ).convertAtFrames( IECore.FrameRange( " + $start + ", " + $end + ") )");
	}
	else
	{
		int $current = `currentTime -q`;
		iePython -cmd ("IECoreMaya.ConverterHolder( '" + $node + "' ).convertAtFrame( " + $current + ")");
	}
}
