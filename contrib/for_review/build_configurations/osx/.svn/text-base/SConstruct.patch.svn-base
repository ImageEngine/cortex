Index: SConstruct
===================================================================
--- SConstruct	(revision 4265)
+++ SConstruct	(working copy)
@@ -433,6 +433,12 @@
 )
 
 o.Add(
+	"INSTALL_TYPE",
+	"The host application that will be used (maya, houdini, nuke)",
+	"",
+)
+
+o.Add(
 	"INSTALL_HEADER_DIR",
 	"The directory in which to install headers.",
 	"$INSTALL_PREFIX/include",
@@ -1137,7 +1143,85 @@
 				
 				outFile.write( "\n" )
 	
+
 ###########################################################################################
+
+def update_lib_id(fname):
+    cmd ="install_name_tool -id  %(fname)s  %(fname)s " % locals()
+    print cmd                                  
+    os.system(cmd)
+
+def update_lib_ref(fname, old, new):
+    cmd ="install_name_tool -change %(old)s %(new)s %(fname)s " % locals()
+    print cmd                                  
+    os.system(cmd)
+
+def get_lib_references(fname):
+	p = subprocess.Popen(["otool", "-L", fname] , stdout=subprocess.PIPE )
+	command_result = p.stdout.readlines()
+	result = {}
+	if command_result:
+		result['id'] = command_result.pop(0).strip()[:-1]
+		libs = []
+		for lib in command_result:
+			lib = lib.strip()
+			if lib:
+				libs.append(lib.split()[0])
+		result['refs'] = libs
+		
+	return result
+	
+def get_installed_libname(lib, env):
+	if "libboost" in lib:
+		return os.path.join(env["INSTALL_PREFIX"], "lib", lib )
+	elif "libtbb" in lib:
+		return os.path.join( env["TBB_LIB_PATH"], lib)
+	elif "lib3delight" in lib:
+		return os.path.join( env["RMAN_ROOT"], "lib", lib)
+	elif "lib3delight" in lib:
+		return os.path.join( env["RMAN_ROOT"], "lib", lib)
+	elif "libIECore" in lib:
+		return os.path.join( env["INSTALL_PREFIX"], "lib", lib)
+		
+	elif lib == "Python":
+		if env['INSTALL_TYPE'] == "maya":
+			return os.path.join( env["MAYA_ROOT"], "Frameworks/Python.framework/Versions/2.6/Python")
+
+	
+def fix_osx_library_references(source=None, target=None, env=None, **kwargs):
+
+	for libfile in target:
+		fname =  libfile.get_path()
+		
+		if fname.endswith(".so") or fname.endswith(".dylib") or fname.endswith(".bundle"):
+			print "processing library " + fname +" : "
+			update_lib_id(fname)
+			libinfo = get_lib_references(fname)
+			for lib in libinfo['refs']:
+				lib_basename = os.path.basename(lib)
+				if "libboost" in lib_basename:
+					target_name = get_installed_libname( lib_basename , env )
+					if not os.path.exists( target_name ):
+						print "copying boost library",  target_name
+						shutil.copy( os.path.join( env["BOOST_LIB_PATH"], lib_basename ), target_name )
+						boost_libinfo = get_lib_references(target_name)
+						for b_lib in boost_libinfo['refs']:
+							update_lib_id( target_name )
+							new_libname = get_installed_libname( os.path.basename(b_lib), env )
+							if new_libname:
+								update_lib_ref(target_name, b_lib, new_libname)
+							
+				new_libname = get_installed_libname( lib_basename , env ) 
+				if new_libname:
+					update_lib_ref(fname, lib, new_libname)
+					
+def run_libinstall_postactions(source=None, target=None, env=None, **kwargs):
+	if env["PLATFORM"]=="darwin" :
+		fix_osx_library_references(source=source, target=target, env=env, **kwargs)
+
+###########################################################################################
+
+###########################################################################################
 # Build, install and test the core library and bindings
 ###########################################################################################
 
@@ -1231,6 +1315,7 @@
 coreLibraryInstall = coreEnv.Install( os.path.dirname( coreEnv.subst( "$INSTALL_LIB_NAME" ) ), coreLibrary )
 coreEnv.NoCache( coreLibraryInstall )
 coreEnv.AddPostAction( coreLibraryInstall, lambda target, source, env : makeLibSymLinks( coreEnv ) )
+coreEnv.AddPostAction( coreLibraryInstall, run_libinstall_postactions )
 coreEnv.Alias( "install", [ coreLibraryInstall ] )
 coreEnv.Alias( "installCore", [ coreLibraryInstall ] )
 coreEnv.Alias( "installLib", [ coreLibraryInstall ] )
@@ -1247,6 +1332,7 @@
 corePythonLibraryInstall = corePythonEnv.Install( os.path.dirname( corePythonEnv.subst( "$INSTALL_LIB_NAME" ) ), corePythonLibrary )
 corePythonEnv.NoCache( corePythonLibraryInstall )
 corePythonEnv.AddPostAction( corePythonLibraryInstall, lambda target, source, env : makeLibSymLinks( corePythonEnv, libNameVar="INSTALL_PYTHONLIB_NAME" ) )
+corePythonEnv.AddPostAction( corePythonLibraryInstall , run_libinstall_postactions )
 corePythonEnv.Alias( "install", [ corePythonLibraryInstall ] )
 corePythonEnv.Alias( "installCore", [ corePythonLibraryInstall ] )
 corePythonEnv.Alias( "installLib", [ corePythonLibraryInstall ] )
@@ -1264,6 +1350,8 @@
 
 corePythonModuleInstall = corePythonModuleEnv.Install( "$INSTALL_PYTHON_DIR/IECore", corePythonScripts + corePythonModule )
 corePythonModuleEnv.AddPostAction( "$INSTALL_PYTHON_DIR/IECore", lambda target, source, env : makeSymLinks( corePythonEnv, corePythonEnv["INSTALL_PYTHON_DIR"] ) )
+corePythonModuleEnv.AddPostAction( corePythonModuleInstall , run_libinstall_postactions )
+
 corePythonModuleEnv.Alias( "install", corePythonModuleInstall )
 corePythonModuleEnv.Alias( "installCore", corePythonModuleInstall )
 
@@ -1414,6 +1502,7 @@
 		riLibraryInstall = riEnv.Install( os.path.dirname( riEnv.subst( "$INSTALL_LIB_NAME" ) ), riLibrary )
 		riEnv.NoCache( riLibraryInstall )
 		riEnv.AddPostAction( riLibraryInstall, lambda target, source, env : makeLibSymLinks( riEnv ) )
+		riEnv.AddPostAction( riLibraryInstall, run_libinstall_postactions )
 		riEnv.Alias( "install", riLibraryInstall )
 		riEnv.Alias( "installRI", riLibraryInstall )
 		riEnv.Alias( "installLib", [ riLibraryInstall ] )
@@ -1429,6 +1518,7 @@
 		riPythonProceduralInstall = riEnv.Install( os.path.dirname( riPythonProceduralEnv.subst( "$INSTALL_RMANPROCEDURAL_NAME" ) ), riPythonProcedural )
 		riPythonProceduralEnv.NoCache( riPythonProceduralInstall )
 		riPythonProceduralEnv.AddPostAction( riPythonProceduralInstall, lambda target, source, env : makeLibSymLinks( riPythonProceduralEnv, libNameVar="INSTALL_RMANPROCEDURAL_NAME" ) )
+		riPythonProceduralEnv.AddPostAction( riPythonProceduralInstall, run_libinstall_postactions )
 		riPythonProceduralEnv.Alias( "install", riPythonProceduralInstall )
 		riPythonProceduralEnv.Alias( "installRI", riPythonProceduralInstall )
 		riPythonProceduralForTest = riPythonProceduralEnv.Command( "src/rmanProcedurals/python/python.so", riPythonProcedural, Copy( "$TARGET", "$SOURCE" ) )
@@ -1438,6 +1528,7 @@
 		riDisplayDriverInstall = riEnv.Install( os.path.dirname( riDisplayDriverEnv.subst( "$INSTALL_RMANDISPLAY_NAME" ) ), riDisplayDriver )
 		riDisplayDriverEnv.NoCache( riDisplayDriverInstall )
 		riDisplayDriverEnv.AddPostAction( riDisplayDriverInstall, lambda target, source, env : makeLibSymLinks( riDisplayDriverEnv, libNameVar="INSTALL_RMANDISPLAY_NAME" ) )
+		riDisplayDriverEnv.AddPostAction( riDisplayDriverInstall, run_libinstall_postactions )
 		riDisplayDriverEnv.Alias( "install", riDisplayDriverInstall )
 		riDisplayDriverEnv.Alias( "installRI", riDisplayDriverInstall )
 		riDisplayDriverForTest = riDisplayDriverEnv.Command( "src/rmanDisplays/ieDisplay/ieTestDisplay.so", riDisplayDriver, Copy( "$TARGET", "$SOURCE" ) )
@@ -1461,6 +1552,7 @@
 
 		riPythonModuleInstall = riPythonModuleEnv.Install( "$INSTALL_PYTHON_DIR/IECoreRI", riPythonScripts + riPythonModule )
 		riPythonModuleEnv.AddPostAction( "$INSTALL_PYTHON_DIR/IECoreRI", lambda target, source, env : makeSymLinks( riPythonModuleEnv, riPythonModuleEnv["INSTALL_PYTHON_DIR"] ) )
+		riPythonModuleEnv.AddPostAction(riPythonModuleInstall, run_libinstall_postactions )
 		riPythonModuleEnv.Alias( "install", riPythonModuleInstall )
 		riPythonModuleEnv.Alias( "installRI", riPythonModuleInstall )
 
@@ -1559,6 +1651,7 @@
 		glLibraryInstall = glEnv.Install( os.path.dirname( glEnv.subst( "$INSTALL_LIB_NAME" ) ), glLibrary )
 		glEnv.NoCache( glLibraryInstall )
 		glEnv.AddPostAction( glLibraryInstall, lambda target, source, env : makeLibSymLinks( glEnv ) )
+		glEnv.AddPostAction( glLibraryInstall, run_libinstall_postactions )
 		glEnv.Alias( "install", glLibraryInstall )
 		glEnv.Alias( "installGL", glLibraryInstall )
 		glEnv.Alias( "installLib", [ glLibraryInstall ] )
@@ -1598,6 +1691,7 @@
 		glPythonScripts = glob.glob( "python/IECoreGL/*.py" )
 		glPythonModuleInstall = glPythonModuleEnv.Install( "$INSTALL_PYTHON_DIR/IECoreGL", glPythonScripts + glPythonModule )		
 		glPythonModuleEnv.AddPostAction( "$INSTALL_PYTHON_DIR/IECoreGL", lambda target, source, env : makeSymLinks( glPythonModuleEnv, glPythonModuleEnv["INSTALL_PYTHON_DIR"] ) )
+		glPythonModuleEnv.AddPostAction(glPythonModuleInstall, run_libinstall_postactions )
 		glPythonModuleEnv.Alias( "install", glPythonModuleInstall )
 		glPythonModuleEnv.Alias( "installGL", glPythonModuleInstall )
 
@@ -1713,6 +1807,7 @@
 		mayaLibraryInstall = mayaEnv.Install( os.path.dirname( mayaEnv.subst( "$INSTALL_MAYALIB_NAME" ) ), mayaLibrary )
 		mayaEnv.NoCache( mayaLibraryInstall )
 		mayaEnv.AddPostAction( mayaLibraryInstall, lambda target, source, env : makeLibSymLinks( mayaEnv, "INSTALL_MAYALIB_NAME" ) )
+		mayaEnv.AddPostAction( mayaLibraryInstall, run_libinstall_postactions )
 		mayaEnv.Alias( "install", mayaLibraryInstall )
 		mayaEnv.Alias( "installMaya", mayaLibraryInstall )
 		mayaEnv.Alias( "installLib", [ mayaLibraryInstall ] )
@@ -1763,6 +1858,7 @@
 			mayaPluginLoader = mayaPluginLoaderEnv.SharedLibrary( mayaPluginTarget, mayaPluginLoaderSources, SHLIBPREFIX="" )
 			mayaPluginLoaderInstall = mayaPluginLoaderEnv.InstallAs( mayaPluginLoaderEnv.subst( "$INSTALL_MAYAPLUGIN_NAME$SHLIBSUFFIX" ), mayaPluginLoader )
 			mayaPluginLoaderEnv.AddPostAction( mayaPluginLoaderInstall, lambda target, source, env : makeSymLinks( mayaPluginLoaderEnv, mayaPluginLoaderEnv["INSTALL_MAYAPLUGIN_NAME"] ) )
+			mayaPluginLoaderEnv.AddPostAction( mayaPluginLoaderInstall, run_libinstall_postactions )
 			mayaPluginLoaderEnv.Alias( "install", mayaPluginLoaderInstall )
 			mayaPluginLoaderEnv.Alias( "installMaya", mayaPluginLoaderInstall )
 			
@@ -1776,6 +1872,7 @@
 		mayaPluginEnv.Depends( mayaPlugin, corePythonModule )
 		
 		mayaPluginEnv.AddPostAction( mayaPluginInstall, lambda target, source, env : makeSymLinks( mayaPluginEnv, mayaPluginEnv["INSTALL_MAYAPLUGIN_NAME"] ) )
+		mayaPluginEnv.AddPostAction( mayaPluginInstall, run_libinstall_postactions )
 		mayaPluginEnv.Alias( "install", mayaPluginInstall )
 		mayaPluginEnv.Alias( "installMaya", mayaPluginInstall )
 				
@@ -1792,6 +1889,7 @@
 
 		mayaPythonModuleInstall = mayaPythonModuleEnv.Install( "$INSTALL_PYTHON_DIR/IECoreMaya", mayaPythonScripts + mayaPythonModule )
 		mayaPythonModuleEnv.AddPostAction( "$INSTALL_PYTHON_DIR/IECoreMaya", lambda target, source, env : makeSymLinks( mayaPythonModuleEnv, mayaPythonModuleEnv["INSTALL_PYTHON_DIR"] ) )
+		mayaPythonModuleEnv.AddPostAction(mayaPythonModuleInstall, run_libinstall_postactions )
 		mayaPythonModuleEnv.Alias( "install", mayaPythonModuleInstall )
 		mayaPythonModuleEnv.Alias( "installMaya", mayaPythonModuleInstall )
 
@@ -1964,6 +2062,7 @@
 				nukeLibrary = nukeEnv.SharedLibrary( "lib/" + os.path.basename( nukeEnv.subst( "$INSTALL_NUKELIB_NAME" ) ), nukeSources )
 				nukeLibraryInstall = nukeEnv.Install( os.path.dirname( nukeEnv.subst( "$INSTALL_NUKELIB_NAME" ) ), nukeLibrary )
 				nukeEnv.AddPostAction( nukeLibraryInstall, lambda target, source, env : makeLibSymLinks( nukeEnv, "INSTALL_NUKELIB_NAME" ) )
+				nukeEnv.AddPostAction( nukeLibraryInstall, run_libinstall_postactions )
 				nukeEnv.Alias( "install", nukeLibraryInstall )
 				nukeEnv.Alias( "installNuke", nukeLibraryInstall )
 				nukeEnv.Alias( "installLib", [ nukeLibraryInstall ] )
@@ -1980,6 +2079,7 @@
 				nukePythonModule = nukePythonModuleEnv.SharedLibrary( "python/IECoreNuke/_IECoreNuke", nukePythonSources )
 				nukePythonModuleInstall = nukePythonModuleEnv.Install( "$INSTALL_NUKEPYTHON_DIR/IECoreNuke", nukePythonScripts + nukePythonModule )
 				nukePythonModuleEnv.AddPostAction( "$INSTALL_NUKEPYTHON_DIR/IECoreNuke", lambda target, source, env : makeSymLinks( nukePythonModuleEnv, nukePythonModuleEnv["INSTALL_NUKEPYTHON_DIR"] ) )
+				nukePythonModuleEnv.AddPostAction(nukePythonModuleInstall , run_libinstall_postactions )
 				nukePythonModuleEnv.Alias( "install", nukePythonModuleInstall )
 				nukePythonModuleEnv.Alias( "installNuke", nukePythonModuleInstall )
 				nukePythonModuleEnv.Depends( nukePythonModule, corePythonModule )
@@ -2156,6 +2256,7 @@
 		houdiniPluginInstall = houdiniPluginEnv.Install( os.path.dirname( houdiniPluginEnv.subst( "$INSTALL_HOUDINIPLUGIN_NAME" ) ), houdiniPlugin )
 		houdiniPluginEnv.Depends( houdiniPlugin, corePythonModule )
 		houdiniPluginEnv.AddPostAction( houdiniPluginInstall, lambda target, source, env : makeSymLinks( houdiniPluginEnv, houdiniPluginEnv["INSTALL_HOUDINIPLUGIN_NAME"] ) )
+		houdiniPluginEnv.AddPostAction( houdiniPluginInstall, run_libinstall_postactions )
 		houdiniPluginEnv.Alias( "install", houdiniPluginInstall )
 		houdiniPluginEnv.Alias( "installHoudini", houdiniPluginInstall )
 		
@@ -2173,6 +2274,7 @@
 		houdiniPythonModuleEnv.Depends( houdiniPythonModule, houdiniLib )
 		houdiniPythonModuleInstall = houdiniPythonModuleEnv.Install( "$INSTALL_PYTHON_DIR/IECoreHoudini", houdiniPythonScripts + houdiniPythonModule )
 		houdiniPythonModuleEnv.AddPostAction( "$INSTALL_PYTHON_DIR/IECoreHoudini", lambda target, source, env : makeSymLinks( houdiniPythonModuleEnv, houdiniPythonModuleEnv["INSTALL_PYTHON_DIR"] ) )
+		houdiniPythonModuleEnv.AddPostAction( houdiniPythonModuleInstall , run_libinstall_postactions )
 		houdiniPythonModuleEnv.Alias( "install", houdiniPythonModuleInstall )
 		houdiniPythonModuleEnv.Alias( "installHoudini", houdiniPythonModuleInstall )
 		
@@ -2320,6 +2422,7 @@
 		
 		truelightPythonModuleInstall = truelightPythonModuleEnv.Install( "$INSTALL_PYTHON_DIR/IECoreTruelight", truelightPythonScripts + truelightPythonModule )
 		truelightPythonModuleEnv.AddPostAction( "$INSTALL_PYTHON_DIR/IECoreTruelight", lambda target, source, env : makeSymLinks( truelightPythonModuleEnv, truelightPythonModuleEnv["INSTALL_PYTHON_DIR"] ) )
+		truelightPythonModuleEnv.AddPostAction( truelightPythonModuleInstall , run_libinstall_postactions )
 		truelightPythonModuleEnv.Alias( "install", truelightPythonModuleInstall )
 		truelightPythonModuleEnv.Alias( "installTruelight", truelightPythonModuleInstall )
 		
