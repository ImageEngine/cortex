sudo: false

language: cpp

os:
    - linux
    - osx

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - boost-latest
    packages:
      - gcc-4.8
      - g++-4.8
      - g++-6

cache:
    directories:
      - sconsCache
      - pyIlmBaseInstall

install:
    - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew update; fi
    - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew install scons; fi
    - if [ -n "$COMPILER_VERSION" ]; then export CXX="${CXX}-${COMPILER_VERSION}"; fi
    - python ./config/travis/installDependencies.py
    - export DEPENDENCIES=`pwd`/dependencies
    - if [ "$TRAVIS_OS_NAME" == "osx" ]; then
          export PYTHON_INCLUDE_PATH=$DEPENDENCIES/lib/Python.framework/Versions/2.7/include/python2.7;
          export PYTHON_LINK_FLAGS="-L$DEPENDENCIES/lib/Python.framework/Versions/2.7/lib -lpython2.7";
      else
          export PYTHON_INCLUDE_PATH=$DEPENDENCIES/include/python2.7;
          export PYTHON_LINK_FLAGS=-lpython2.7;
      fi
script:
    # Preload libSegFault when running tests, so we get stack
    # traces from any crashes.
    - export LD_PRELOAD=/lib/x86_64-linux-gnu/libSegFault.so
    - export LD_LIBRARY_PATH=$DEPENDENCIES/lib
    - export DYLD_FRAMEWORK_PATH=$DEPENDENCIES/lib
    - scons -j 2
      testCore testCorePython testScene testImage testAlembic testAppleseed
      CXX=$CXX
      CXXSTD=$CXXSTD
      TBB_INCLUDE_PATH=$DEPENDENCIES/lib
      TBB_LIB_PATH=$DEPENDENCIES/lib
      BOOST_INCLUDE_PATH=$DEPENDENCIES/include
      BOOST_LIB_PATH=$DEPENDENCIES/lib
      BOOST_LIB_SUFFIX=""
      OPENEXR_INCLUDE_PATH=$DEPENDENCIES/include
      OPENEXR_LIB_PATH=$DEPENDENCIES/lib
      ILMBASE_INCLUDE_PATH=$DEPENDENCIES/include
      ILMBASE_LIB_PATH=$DEPENDENCIES/lib
      FREETYPE_INCLUDE_PATH=$DEPENDENCIES/include/freetype2
      FREETYPE_LIB_PATH=$DEPENDENCIES/lib
      ALEMBIC_INCLUDE_PATH=$DEPENDENCIES/include
      ALEMBIC_LIB_PATH=$DEPENDENCIES/lib
      HDF5_INCLUDE_PATH=$DEPENDENCIES/include
      HDF5_LIB_PATH=$DEPENDENCIES/lib
      APPLESEED_INCLUDE_PATH=$DEPENDENCIES/appleseed/include
      APPLESEED_LIB_PATH=$DEPENDENCIES/appleseed/lib
      OIIO_INCLUDE_PATH=$DEPENDENCIES/include
      OSL_INCLUDE_PATH=$DEPENDENCIES/include
      BLOSC_INCLUDE_PATH=$DEPENDENCIES/include
      BLOSC_LIB_PATH=$DEPENDENCIES/lib
      PYTHON=$DEPENDENCIES/bin/python
      PYTHON_INCLUDE_PATH=$PYTHON_INCLUDE_PATH
      PYTHON_LINK_FLAGS="$PYTHON_LINK_FLAGS"
      LIBPATH=$DEPENDENCIES/lib
      PYTHONPATH=$DEPENDENCIES/python
      DEBUG=$DEBUG
      ENV_VARS_TO_IMPORT="PATH TRAVIS LD_PRELOAD LD_LIBRARY_PATH DYLD_FRAMEWORK_PATH"
      RMAN_ROOT=$DELIGHT
      BUILD_CACHEDIR=sconsCache
    - cat test/IECore/results.txt

before_cache:
    # This is run just before uploading the cache for next time.
    # SCons caches grow without bound so we want to remove old
    # files to prevent our caches becoming too big.
    - python ./config/travis/limitCacheSize.py
    - du -sh sconsCache

matrix:
    # The standard Travis mechanism generates a build for
    # every permutation of os/compiler/env. This is hard
    # to wrangle, so instead we disable all the standard
    # builds.
    exclude:
        - os: osx
        - os: linux
    # We can then simply list the exact builds we want.
    include:
        - os: linux
          compiler: gcc
          env: COMPILER_VERSION=4.8 CXXSTD=c++11 BUILD_TYPE=RELEASE IECORE_STREAMINDEXEDIO_COMPRESSION="lz4 9 1 1"
        - os: linux
          compiler: gcc
          env: COMPILER_VERSION=4.8 CXXSTD=c++11 BUILD_TYPE=RELEASE IECORE_STREAMINDEXEDIO_COMPRESSION="lz4 0 1 1"
        - os: linux
          compiler: gcc
          env: COMPILER_VERSION=4.8 CXXSTD=c++11 BUILD_TYPE=DEBUG
        - os: linux
          compiler: gcc
          env: COMPILER_VERSION=6 CXXSTD=c++14 BUILD_TYPE=RELEASE
        - os: osx
          env: COMPILER=clang++ CXXSTD=c++11 BUILD_TYPE=RELEASE

