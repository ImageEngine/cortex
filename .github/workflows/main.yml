name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - '*_maintenance'
  pull_request:
    branches:
      - master
      - '*_maintenance'

jobs:

  build:

    env:
      # These are required by `config/azure/options.*`, which we are
      # using temporarily for convenience.
      # Todo : Ditch Azure and make this workflow as self-contained as
      # possible.
      CORTEX_DEPENDENCIES_DIR: build
      CORTEX_BUILD_NAME: build

    strategy:

      # Don't cancel other jobs in the build matrix if one job fails.
      fail-fast: false

      matrix:

        # Rather than generate all permutations of various settings,
        # we want to explicitly list each of the variants we want to
        # test. We can use `name` to declare the names of our variants,
        # and then use `include` to define their settings.

        name: [
          linux,
          linux-debug,
          linux-python3,
          macos,
          windows
        ]

        include:

          - name: linux
            os: ubuntu-16.04
            buildType: RELEASE
            containerImage: gafferhq/build:1.0.0
            options: .github/workflows/main/options.linux
            dependenciesURL: https://github.com/GafferHQ/dependencies/releases/download/2.1.1/gafferDependencies-2.1.1-Python2-linux.tar.gz

          - name: linux-debug
            os: ubuntu-16.04
            buildType: DEBUG
            containerImage: gafferhq/build:1.0.0
            options: .github/workflows/main/options.linux
            dependenciesURL: https://github.com/GafferHQ/dependencies/releases/download/2.1.1/gafferDependencies-2.1.1-Python2-linux.tar.gz

          - name: linux-python3
            os: ubuntu-16.04
            buildType: RELEASE
            containerImage: gafferhq/build:1.0.0
            options: .github/workflows/main/options.linux
            dependenciesURL: https://github.com/GafferHQ/dependencies/releases/download/2.1.1/gafferDependencies-2.1.1-Python3-linux.tar.gz

          - name: macos
            os: macos-10.15
            buildType: RELEASE
            containerImage:
            options: .github/workflows/main/options.macos
            dependenciesURL: https://github.com/GafferHQ/dependencies/releases/download/2.1.1/gafferDependencies-2.1.1-Python2-osx.tar.gz

          - name: windows
            os: windows-2019
            buildType: RELEASE
            options: .github/workflows/main/options.windows
            dependenciesURL: "https://github.com/hypothetical-inc/gafferDependencies/releases/download/2.1.1/gafferDependencies-2.1.1-Python2-windows.zip"

    runs-on: ${{ matrix.os }}

    container: ${{ matrix.containerImage }}

    steps:

    - uses: actions/checkout@v2

    - name: Setup python (Windows)
      # Revert to Python 2.7 on Windows, for running
      # things like `installDependencies.py`.
      uses: actions/setup-python@v1
      with:
        python-version: 2.7
      if: runner.os == 'Windows'

    - uses: ilammy/msvc-dev-cmd@v1
      with: 
        sdk: 10.0.17763.0

    - name: Install toolchain (Windows)
      run: python -m pip install scons
      if: runner.os == 'Windows'

    - name: Install toolchain (MacOS)
      # Prefer `pip install` because it is faster
      # than `brew install`.
      run: sudo pip3 install scons==4.0.1
      if: runner.os == 'macOS'

    - name: Install toolchain (Linux)
      run: |
        echo /opt/rh/devtoolset-6/root/bin >> $GITHUB_PATH
      if: runner.os == 'Linux'

    - name: Install dependencies
      # The `$GITHUB_ENV` shenanigans creates an environment variable
      # containing the hash of the archive, for use in the cache key
      # below.
      run: |
        echo CORTEX_DEPENDENCIES_HASH=`python config/installDependencies.py --archiveURL ${{ matrix.dependenciesURL }} --dependenciesDir ./build --outputFormat "{archiveDigest}"` >> $GITHUB_ENV
      shell: bash

    - name: Cache
      uses: actions/cache@v1
      with:
        path: sconsCache
        key: ${{ runner.os }}-${{ matrix.containerImage }}-${{env.CORTEX_DEPENDENCIES_HASH}}-${{ matrix.buildType }}-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.containerImage }}-${{env.CORTEX_DEPENDENCIES_HASH}}-${{ matrix.buildType }}-

    - name: Build
      run: |
       scons -j 2 install BUILD_TYPE=${{ matrix.buildType }} OPTIONS=${{ matrix.options }} CXXSTD=c++14 BUILD_CACHEDIR=sconsCache

    - name: Test
      run: |
        scons testCorePython testScene testImage testAlembic testUSD BUILD_TYPE=${{ matrix.buildType }} OPTIONS=${{ matrix.options }} CXXSTD=c++14 BUILD_CACHEDIR=sconsCache
      # We have some work to do before we can run the tests
      # successfully on Windows. Until then, we satisfy ourselves
      # with checking that it at least _builds_.
      if: runner.os != 'Windows'

    - name: Limit cache size
      run: python ./.github/workflows/main/limitCacheSize.py
