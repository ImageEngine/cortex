import os
import platform

deps = os.environ.get( "CORTEX_BUILD_NAME" )
includes = os.path.join( deps, "include" )
libs = os.path.join( deps, "lib" )

build = "./" + os.environ.get( "CORTEX_BUILD_NAME" )

INSTALL_PREFIX = build
INSTALL_DOC_DIR = build + "/doc"
INSTALL_RMANPROCEDURAL_NAME = build + "/build/renderMan/procedurals/iePython"
INSTALL_RMANDISPLAY_NAME = build + "/renderMan/displayDrivers/ieDisplay"
INSTALL_PYTHON_DIR = build + "/python"
INSTALL_ARNOLDOUTPUTDRIVER_NAME = build + "/arnold/plugins/ieOutputDriver.so"
INSTALL_IECORE_OPS = ""

LIBPATH = libs

# Python
# ======

PYTHON = deps + "/bin/python"

if os.path.exists( deps + "/bin/python3" ) :
	pythonABIVersion = "3.7m"
else :
	pythonABIVersion = "2.7"

PYTHON_LINK_FLAGS = "-lpython" + pythonABIVersion

if platform.system() == "Linux" :
	PYTHON_INCLUDE_PATH = includes + "/python" + pythonABIVersion
else :
	# MacOS
	PYTHON_INCLUDE_PATH = libs + "/Python.framework/Headers"
	LIBPATH += ":" + libs + "/Python.framework/Versions/" + pythonABIVersion + "/lib"

PYTHONPATH = deps + "/python"

# Libs
# ====

BOOST_INCLUDE_PATH = includes
BOOST_LIB_SUFFIX = ""

OPENEXR_INCLUDE_PATH = includes
OIIO_INCLUDE_PATH = includes
OIIO_LIB_PATH = libs
OSL_INCLUDE_PATH = includes
BLOSC_INCLUDE_PATH = includes
FREETYPE_INCLUDE_PATH = includes + "/freetype2"

WITH_GL = "1"
GLEW_INCLUDE_PATH = includes + "/GL"

# Renderers
# =========

RMAN_ROOT = os.environ["DELIGHT"]
ARNOLD_ROOT = os.environ["ARNOLD_ROOT"]
APPLESEED_ROOT = deps + "/appleseed"
APPLESEED_INCLUDE_PATH = deps + "/appleseed/include"
APPLESEED_LIB_PATH = deps + "/appleseed/lib"

# Environment
# ===========

ENV_VARS_TO_IMPORT = "PATH IECORE_RTLD_GLOBAL"

if platform.system() == "Darwin" :
	os.environ["DYLD_FRAMEWORK_PATH"] = libs
	ENV_VARS_TO_IMPORT += " DYLD_FRAMEWORK_PATH"