import os

deps = os.environ.get( "CORTEX_BUILD_NAME" )
includes = os.path.join( deps, "include" )
libs = os.path.join( deps, "lib" )

build = os.environ.get( "CORTEX_BUILD_NAME" )

INSTALL_PREFIX = build
INSTALL_DOC_DIR = build + "\\doc"
INSTALL_RMANPROCEDURAL_NAME = build + "\\build\\renderMan\\procedurals\\iePython"
INSTALL_RMANDISPLAY_NAME = build + "\\renderMan\\displayDrivers\\ieDisplay"
INSTALL_PYTHON_DIR = build + "\\python"
INSTALL_ARNOLDOUTPUTDRIVER_NAME = build + "\\arnold\\plugins\\ieOutputDriver.dll"
INSTALL_IECORE_OPS = ""

# disable permissive mode, making MSVC more standards compliant
# /D_USE_MATH_DEFINES is needed with permissive mode off for
# common definitions like M_P
# /Zc:externC- fixes a compilation error with Boost::interprocess
# described here:
# https://developercommunity.visualstudio.com/content/problem/756694/including-windowsh-and-boostinterprocess-headers-l.html
CXXFLAGS = ["/permissive-", "/D_USE_MATH_DEFINES", "/Zc:externC-"]

LIBPATH = deps + "\\lib"

PYTHON = deps + "\\bin\\python"
PYTHON_INCLUDE_PATH = deps + "\\include"
PYTHON_LINK_FLAGS = ""
PYTHON_LIB_PATH = deps + "\\libs"

PYTHONPATH = deps + "\\python"

BOOST_INCLUDE_PATH = deps + "\\include\\boost-1_68"
BOOST_LIB_SUFFIX = "-vc141-mt-x64-1_68"

OPENEXR_INCLUDE_PATH = deps + "\\include"
OIIO_INCLUDE_PATH = deps + "\\include\\OpenImageIO"
OIIO_LIB_PATH = deps + "\\lib"
OSL_INCLUDE_PATH = deps + "\\include"
BLOSC_INCLUDE_PATH = deps + "\\include"
FREETYPE_INCLUDE_PATH = deps + "\\include\\freetype2"

WITH_GL = "1"
GLEW_INCLUDE_PATH = deps + "\\include"
GLEW_LIB_SUFFIX = "32"

TBB_INCLUDE_PATH = deps + "\\include"
USD_INCLUDE_PATH = deps + "\\include"
USD_LIB_PATH = deps + "\\lib"
DOXYGEN = deps + "\\doxygen\\doxygen.exe"
OPTIONS = ""
WARNINGS_AS_ERRORS = "0"

RMAN_ROOT = ""
NUKE_ROOT = ""
ARNOLD_ROOT = os.environ["ARNOLD_ROOT"]
APPLESEED_ROOT = deps + "\\appleseed"
APPLESEED_INCLUDE_PATH = deps + "\\appleseed\\include"
APPLESEED_LIB_PATH = deps + "\\appleseed\\lib"

ENV_VARS_TO_IMPORT = "PATH"

